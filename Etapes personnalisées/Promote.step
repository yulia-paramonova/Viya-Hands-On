{"creationTimeStamp":"2023-01-11T09:29:20.609Z","modifiedTimeStamp":"2023-01-11T09:29:20.609Z","createdBy":"Ayoub.LamraniAlaoui@sas.com","modifiedBy":"Ayoub.LamraniAlaoui@sas.com","name":"Promote.step","displayName":"Promote.step","localDisplayName":"Promote.step","properties":{},"links":[{"method":"GET","rel":"self","href":"/dataFlows/steps/b034c71b-1861-4e64-a5c3-2ddc20f6f52a","uri":"/dataFlows/steps/b034c71b-1861-4e64-a5c3-2ddc20f6f52a","type":"application/vnd.sas.data.flow.step"},{"method":"GET","rel":"alternate","href":"/dataFlows/steps/b034c71b-1861-4e64-a5c3-2ddc20f6f52a","uri":"/dataFlows/steps/b034c71b-1861-4e64-a5c3-2ddc20f6f52a","type":"application/vnd.sas.data.flow.step.summary"},{"method":"GET","rel":"up","href":"/dataFlows/steps","uri":"/dataFlows/steps","type":"application/vnd.sas.collection","itemType":"application/vnd.sas.data.flow.step.summary"},{"method":"PUT","rel":"update","href":"/dataFlows/steps/b034c71b-1861-4e64-a5c3-2ddc20f6f52a","uri":"/dataFlows/steps/b034c71b-1861-4e64-a5c3-2ddc20f6f52a","type":"application/vnd.sas.data.flow.step","responseType":"application/vnd.sas.data.flow.step"},{"method":"DELETE","rel":"delete","href":"/dataFlows/steps/b034c71b-1861-4e64-a5c3-2ddc20f6f52a","uri":"/dataFlows/steps/b034c71b-1861-4e64-a5c3-2ddc20f6f52a"},{"method":"GET","rel":"transferExport","href":"/dataFlows/steps/b034c71b-1861-4e64-a5c3-2ddc20f6f52a","uri":"/dataFlows/steps/b034c71b-1861-4e64-a5c3-2ddc20f6f52a","responseType":"application/vnd.sas.transfer.object"},{"method":"PUT","rel":"transferImportUpdate","href":"/dataFlows/steps/b034c71b-1861-4e64-a5c3-2ddc20f6f52a","uri":"/dataFlows/steps/b034c71b-1861-4e64-a5c3-2ddc20f6f52a","type":"application/vnd.sas.transfer.object","responseType":"application/vnd.sas.summary"}],"metadataVersion":0.0,"version":2,"type":"code","flowMetadata":{"inputPorts":[{"name":"inputTable","displayName":"inputTable","localDisplayName":"inputTable","minEntries":1,"maxEntries":1,"defaultEntries":0,"type":"table"}],"outputPorts":[]},"ui":"{\n\t\"showPageContentOnly\": true,\n\t\"pages\": [\n\t\t{\n\t\t\t\"id\": \"page1\",\n\t\t\t\"type\": \"page\",\n\t\t\t\"label\": \"Parameters\",\n\t\t\t\"children\": [\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"inputTable\",\n\t\t\t\t\t\"type\": \"inputtable\",\n\t\t\t\t\t\"label\": \"Input Table\",\n\t\t\t\t\t\"required\": true,\n\t\t\t\t\t\"placeholder\": \"\",\n\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"overwriteExistingTable\",\n\t\t\t\t\t\"type\": \"checkbox\",\n\t\t\t\t\t\"label\": \"Overwrite exiting table.\",\n\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"text1\",\n\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\"text\": \"Set the CAS output library for the promoted table. If not set the input library name is used.\\nYou need to set a CAS library if the input library is not a CAS library.\",\n\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"outputLib\",\n\t\t\t\t\t\"type\": \"textfield\",\n\t\t\t\t\t\"label\": \"CAS output library\",\n\t\t\t\t\t\"placeholder\": \"\",\n\t\t\t\t\t\"required\": false,\n\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"text2\",\n\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\"text\": \"Set the CAS table name for the promoted table.\",\n\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"outputTable\",\n\t\t\t\t\t\"type\": \"textfield\",\n\t\t\t\t\t\"label\": \"CAS output table\",\n\t\t\t\t\t\"placeholder\": \"\",\n\t\t\t\t\t\"required\": false,\n\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t],\n\t\"syntaxversion\": \"1.3.0\",\n\t\"values\": {\n\t\t\"inputTable\": {\n\t\t\t\"library\": \"\",\n\t\t\t\"table\": \"\"\n\t\t},\n\t\t\"overwriteExistingTable\": false,\n\t\t\"outputLib\": \"\",\n\t\t\"outputTable\": \"\"\n\t}\n}","templates":{"SAS":"/************************************************************************************************/\n/* promote table if the table is already in the promote lib */\n%macro tableIsInPromoteLib();\n\t/* generate a name for the tmp table */\n\t%tmpTableName();\n\n\tproc cas;\n\t\tglobal rc;\n\t\n\t\trc= 0;\n\t\t/* if input table exists in session in the pomote lib - rename it to tmp name*/\n\t\ttable.tableExists result=r /\n\t\tcaslib=\"&inputTable_lib\" name=\"&inputTable_name\";\n\t\tif r.exists=1 then \n\t\t\ttable.alterTable /\n\t\t\t\tcaslib=\"&inputTable_lib\" name=\"&inputTable_name\" rename=\"&tmpTable_name\";\n\t\trun;\n\t\n\t\tif r.exists=2 then \n\t\t\tdatastep.runCode /\n\t\t\t\tcode=  \"data _null_;\n\t\t\t\t\t\terror 'ERROR: There is no session-scope table for &inputTable_lib..&inputTable_name' ;\n\t\t\t\t\t\tabort;\n\t\t\t\t\trun;\";\n\t\trun;\n\t\n\t\n\t\t/* if overwrite is ticked in the UI we remove the promoted table */\n\t\tif r.exists=1 then \n\t\t\t%if &overwriteExistingTable = 1 %then %do;\n\t\t\t\ttable.dropTable /\n\t\t\t\t\tcaslib=\"&outputLib\",\n\t\t\t\t\tname=\"&outputTable\",\n\t\t\t\t\tquiet=TRUE;\n\t\trun;\n\t\t\t%end;\n\t\n\t\t/* promote the table. use the tmpTableName */\n\t\tif r.exists=1 then \n\t\t\ttable.promote /\n\t\t\t\tcaslib=\"&inputTable_lib\",\n\t\t\t\tname=\"&tmpTable_name\",\n\t\t\t\ttargetLib=\"&outputLib\",\n\t\t\t\ttarget=\"&outputTable\";\n\t\trun;\n\tquit;\n%mend tableIsInPromoteLib;\n\n/************************************************************************************************/\n%macro tableIsNotInPromoteLib();\t\n\t/* generate a name for the tmp table */\n\t%tmpTableName();\n\n\t/* copy the input table to a tmp table in the target CAS lib from where we promote the table */\n\tdata &outputLib..&tmpTable_name;\n\t\tset &inputTable_lib..&inputTable_name;\n\trun;\n\n\t/* if overwrite is ticked in the UI we remove the promoted table */\n\t%if &overwriteExistingTable = 1 %then %do;\n\t\tproc casutil;\n\t\t   droptable incaslib=\"&outputLib\" casdata=\"&outputTable\" quiet;\n\t\tquit;\n\t%end;\n\t\n\t/* pormote the table */\n\tproc casutil;\n\t\tpromote incaslib=\"&outputLib\" casdata=\"&tmpTable_name\" \n\t\t\t\toutcaslib=\"&outputLib\" casout= \"&outputTable\";\n\tquit;\n%mend tableIsNotInPromoteLib;\n\n/************************************************************************************************/\n%macro tmpTableName();\n\t/* generate a unique tmp table name */\n\tdata _null_;\n\t\tlength uuid $28;\n\t\tlength tmpTable $32;\n\t\t\n\t\tuuid= uuidgen();\n\t\tuuid= tranwrd(uuid, \"-\", \"_\");\n\t\ttmpTable_name= '_tmp' || uuid;\n\t\tcall symput('tmpTable_name', tmpTable_name);\n\trun;\n%mend tmpTableName;\n\n/************************************************************************************************/\n/* if &inputTable_lib is empty we assume in and out name are the same */\n%if %length(&outputLib) = 0 %then %do;\n\t%let outputLib= &inputTable_lib;\n%end;\n%put &outputLib;\n\n/* if &outputTable is empty we assume in and out name are the same */\n%if %length(&outputTable) = 0 %then %do;\n\t%let outputTable= &inputTable_name;\n%end;\n%put &outputTable;\n\n/* if inputTable is already in the promote lib */\n%if %upcase(&inputTable_lib) = %upcase(&outputLib)  %then %do;\n\t%tableIsInPromoteLib();\n%end;\n%else %do;\n\t%tableIsNotInPromoteLib();\n%end;"}}